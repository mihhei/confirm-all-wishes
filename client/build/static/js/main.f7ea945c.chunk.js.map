{"version":3,"sources":["components/Header.js","hooks/http.hook.js","components/Button.js","components/Context.js","components/ItemPrice.js","components/Items.js","components/List.js","components/WishList.js","components/Intro.js","components/AlertConfirm.js","components/ConfirmButton.js","components/Container.js","components/FinalOrder.js","components/ConfirmList.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["Header","className","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Button","text","onClick","Context","React","createContext","ItemPrice","userId","id","price","allSelectedItems","setAllSelectedItems","allProductsQuantity","setAllProductsQuantity","useContext","allCarts","setAllCarts","select","setSelect","discount","setDiscount","ableDiscount","setAbleDiscount","getAbleDiscount","discountForItem","useEffect","allSelectedProducts","map","item","productId","sameProductQuantity","getDiscount","prev","reducedPrice","Math","round","changeSelect","selector","Items","cart","userName","productInfo","setProductInfo","fetchingData","newItem","cartId","productName","title","console","log","List","fetchedList","setFetchedList","summa","setSumma","fetchingCart","date","Date","now","products","sum","index","WishList","checkOpenWishList","setUserName","showList","setShowList","firstLetterToUpperCase","string","toUpperCase","slice","fetchData","name","firstname","lastname","Intro","buttonClick","AlertConfirm","to","carts","includes","push","user","updatedProduct","quantity","ConfirmButton","showAlert","setShowAlert","Container","setCarts","check","setCheck","getUsers","length","FinalOrder","subTotal","setSubTotal","finalPrice","ConfirmList","setData","cartsId","setCartsId","cartData","productsData","productsDataItem","App","routes","path","exact","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7ea945c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => <div className=\"header\"></div>;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers['Content-Type'] = 'application/json';\r\n        }\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || 'Something wrong!');\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import React from 'react';\r\n\r\nexport const Button = ({text, onClick}) => {\r\n\r\nreturn <div className=\"button\" onClick={onClick}>{text}</div>\r\n}","import React from \"react\";\r\nexport const Context = React.createContext();","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Context } from './Context';\r\n\r\nexport const ItemPrice = ({ userId, id, price }) => {\r\n  const [allSelectedItems, setAllSelectedItems] = useState({});\r\n  const [allProductsQuantity, setAllProductsQuantity] = useState({});\r\n  const [allCarts, setAllCarts] = useContext(Context);\r\n  const [select, setSelect] = useState(' select');\r\n  const [discount, setDiscount] = useState(0);\r\n  const [ableDiscount, setAbleDiscount] = useState(0);\r\n\r\n  const getAbleDiscount = useCallback(() => {\r\n    if (allProductsQuantity[id] === 1) {\r\n      setAbleDiscount(0);\r\n    } else {\r\n      if (allSelectedItems[id]) {\r\n        setAbleDiscount(discount + 10);\r\n      } else {\r\n        setAbleDiscount('up to ' + discountForItem(allProductsQuantity[id]));\r\n      }\r\n    }\r\n  }, [id, allProductsQuantity, discount, allSelectedItems]);\r\n\r\n  useEffect(() => {\r\n    const allProductsQuantity = {};\r\n    const allSelectedProducts = {};\r\n    allCarts.map((item) => {\r\n      if (!allProductsQuantity[item.productId]) {\r\n        allProductsQuantity[item.productId] = 1;\r\n      } else {\r\n        allProductsQuantity[item.productId] += 1;\r\n      }\r\n      if (item.select) {\r\n        if (!allSelectedProducts[item.productId]) {\r\n          allSelectedProducts[item.productId] = 1;\r\n        } else {\r\n          allSelectedProducts[item.productId] += 1;\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n    setAllSelectedItems(allSelectedProducts);\r\n    setAllProductsQuantity(allProductsQuantity);\r\n  }, [allCarts]);\r\n\r\n  const discountForItem = (sameProductQuantity) => {\r\n    switch (sameProductQuantity) {\r\n      case 1:\r\n        return 0;\r\n      case 2:\r\n        return 10;\r\n      case 3:\r\n        return 20;\r\n      case 4:\r\n        return 30;\r\n      case 5:\r\n        return 40;\r\n      default:\r\n        return 40;\r\n    }\r\n  };\r\n  const getDiscount = useCallback(() => {\r\n    if (allSelectedItems[id]) {\r\n      setDiscount(discountForItem(allSelectedItems[id]));\r\n    }\r\n  }, [allSelectedItems, id]);\r\n\r\n  useEffect(() => {\r\n    getDiscount();\r\n    getAbleDiscount();\r\n  }, [allSelectedItems, getDiscount, getAbleDiscount]);\r\n\r\n  useEffect(() => {\r\n    setAllCarts((prev) =>\r\n      prev.map((item) => {\r\n        if (item.userId === userId && item.productId === id) {\r\n          return {\r\n            ...item,\r\n            reducedPrice: Math.round((100 - discount) * price) / 100,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }, [discount]);\r\n\r\n  const changeSelect = (selector) => {\r\n    setAllCarts((prev) =>\r\n      prev.map((item) => {\r\n        if (item.userId === userId && item.productId === id) {\r\n          return { ...item, select: selector };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const selectHandler = () => {\r\n    if (select) {\r\n      setSelect('');\r\n      changeSelect(false);\r\n    } else {\r\n      setSelect(' select');\r\n      changeSelect(true);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={'itemPrice' + select}\r\n      onClick={() => {\r\n        selectHandler();\r\n      }}\r\n    >\r\n      <div className=\"alignCenter\">\r\n        {!select && ableDiscount !== 0 && (\r\n          <div className=\"priceSpan alignCenter\">{'Get extra'}</div>\r\n        )}\r\n        {select && discount !== 0 && <div className=\"priceSpan alignCenter\">Save</div>}\r\n      </div>\r\n      <div className=\"alignCenter\">\r\n        {!select && <div>{price}</div>}\r\n        {select && <div>{Math.round((100 - discount) * price) / 100}</div>}\r\n      </div>\r\n      <div className=\"alignCenter\">\r\n        {!select && ableDiscount !== 0 && (\r\n          <div className=\"priceSpan alignCenter\">{ableDiscount + '%'}</div>\r\n        )}\r\n        {select && discount !== 0 && (\r\n          <div className=\"priceSpan alignCenter\">{discount + '%'}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Context } from './Context';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { ItemPrice } from './ItemPrice';\r\n\r\nexport const Items = ({ id, cart, userName }) => {\r\n  const { request } = useHttp();\r\n  const [productInfo, setProductInfo] = useState();\r\n\r\n  const [allCarts, setAllCarts] = useContext(Context);\r\n\r\n  const fetchingData = useCallback(async () => {\r\n    try {\r\n      const fetch = await request(`/api/cart/product/${id}`, 'GET', null);\r\n      setProductInfo(fetch);\r\n      const newItem = {\r\n        cartId: cart.cartId,\r\n        userId: cart.userId,\r\n        userName,\r\n        price: fetch.price,\r\n        productId: id,\r\n        select: true,\r\n        reducedPrice: fetch.price,\r\n        productName: fetch.title,\r\n      };\r\n      setAllCarts((prev) => [...prev, newItem]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [request, id, setAllCarts, userName, cart]);\r\n\r\n  useEffect(() => {\r\n    fetchingData();\r\n  }, [fetchingData]);\r\n\r\n  return (\r\n    <>\r\n      {productInfo && (\r\n        <div className=\"item\">\r\n          <div className=\"itemTitle\">{productInfo.title}</div>\r\n          <ItemPrice userId={cart.userId} id={id} price={productInfo.price} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { Items } from './Items';\r\nimport { Context } from './Context';\r\n\r\nexport const List = ({ cart, userName }) => {\r\n  const { request } = useHttp();\r\n  const [fetchedList, setFetchedList] = useState();\r\n  const [allCarts, setAllCarts] = useContext(Context);\r\n  const [summa, setSumma] = useState(0);\r\n\r\n  const fetchingCart = useCallback(async () => {\r\n    try {\r\n      const fetch = await request('/api/cart/postcart', 'POST', {\r\n        userId: cart.userId,\r\n        date: Date.now(),\r\n        products: cart.products,\r\n      });\r\n      setFetchedList(fetch);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [request, cart]);\r\n\r\n  useEffect(() => {\r\n    fetchingCart();\r\n  }, [fetchingCart]);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    allCarts.map((item) => {\r\n      if (item.userId === cart.userId && item.select === true) {\r\n        sum += item.reducedPrice;\r\n      }\r\n      return item;\r\n    });\r\n    setSumma(sum);\r\n  }, [allCarts, cart.userId]);\r\n\r\n  return (\r\n    <>\r\n      {!fetchedList && (\r\n        <div className=\"loader\">\r\n          <i className=\"fas fa-gift\"></i>\r\n        </div>\r\n      )}\r\n      {fetchedList && (\r\n        <div className=\"list\">\r\n          {fetchedList.products.map((item, index) => {\r\n            return (\r\n              <Items\r\n                id={item.productId}\r\n                cart={cart}\r\n                userName={userName}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      {summa !== 0 && (\r\n        <div className=\"font600\">{'Total ' + Math.round(summa * 100) / 100 + ' euro'}</div>\r\n      )}\r\n      {summa === 0 && <div className=\"font600\">Select any wishes!</div>}\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { Button } from './Button';\r\nimport { List } from './List';\r\n\r\nexport const WishList = ({ cart, checkOpenWishList }) => {\r\n  const { request } = useHttp();\r\n  const [userName, setUserName] = useState();\r\n  const [showList, setShowList] = useState(false);\r\n\r\n  const firstLetterToUpperCase = (string) => {\r\n    const newString = string[0].toUpperCase() + string.slice(1);\r\n    return newString;\r\n  };\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const fetch = await request(`/api/user/${cart.userId}`, 'GET', null);\r\n    setUserName(\r\n      firstLetterToUpperCase(fetch.name.firstname) +\r\n        ' ' +\r\n        firstLetterToUpperCase(fetch.name.lastname)\r\n    );\r\n  }, [request, cart.userId]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const clickHandler = () => {\r\n    setShowList(true);\r\n    checkOpenWishList();\r\n  };\r\n\r\n  return (\r\n    <div className=\"wishList\">\r\n      {userName && !showList && (\r\n        <Button text={'Get ' + userName + ' list'} onClick={clickHandler} />\r\n      )}\r\n      {showList && (\r\n        <>\r\n          <h3>{userName}</h3>\r\n          <List cart={cart} userName={userName} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button } from './Button';\r\n\r\nexport const Intro = ({ buttonClick }) => {\r\n  return (\r\n    <div className=\"alignCenter\">\r\n      <div className=\"intro\">\r\n        Hi! Here we are, under christmas tree! We hope, that place will be\r\n        fulled with gifts!\r\n      </div>\r\n      <Button\r\n        text={\"Let's see all wishlists you have!\"}\r\n        onClick={buttonClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Context } from \"./Context\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const AlertConfirm = () => {\r\n  const [allCarts, setAllCarts] = useContext(Context);\r\n  const { request } = useHttp();\r\n\r\n  const updateCarts = () => {\r\n    const carts = [];\r\n    allCarts.map((item) => {\r\n      if (!carts.includes(item.cartId)) {\r\n        carts.push(item.cartId);\r\n      }\r\n      return item;\r\n    });\r\n    carts.map(async (cart) => {\r\n      const products = [];\r\n      let user = null;\r\n      allCarts.map((item) => {\r\n        if (item.cartId === cart && item.select) {\r\n          const updatedProduct = {\r\n            productId: item.productId,\r\n            quantity: 1,\r\n          };\r\n          products.push(updatedProduct);\r\n          user = item.userId;\r\n        }\r\n        return item;\r\n      });\r\n      try {\r\n        const fetch = await request(`/api/cart/update/${cart}`, \"PUT\", {\r\n          userId: user,\r\n          date: Date.now(),\r\n          products,\r\n        });\r\n        console.log(fetch);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"alertConfirmWrap\">\r\n      <div className=\"alertConfirm alignCenter\">\r\n        <div className=\"alertMessage\">\r\n          Confirm to proceed all selected wishes to order!\r\n        </div>\r\n        <NavLink className=\"button\" to=\"/confirm\" onClick={updateCarts}>\r\n          Confirm!\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport { AlertConfirm } from \"./AlertConfirm\";\r\n\r\nexport const ConfirmButton = () => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const getAlert = () => {\r\n    setShowAlert(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showAlert && <AlertConfirm />}\r\n      {!showAlert && (\r\n        <div className=\"alignCenter\">\r\n          <Button onClick={getAlert} text={\"Confirm all selected items!\"} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { WishList } from './WishList';\r\nimport { Intro } from './Intro';\r\nimport { ConfirmButton } from './ConfirmButton';\r\n\r\nexport const Container = () => {\r\n  const { request } = useHttp();\r\n  const [carts, setCarts] = useState();\r\n  const [check, setCheck] = useState(0);\r\n  const getUsers = async () => {\r\n    try {\r\n      const fetch = await request('/api/cart/getcarts', 'GET', null);\r\n      setCarts(fetch);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const checkOpenWishList = () => {\r\n    setCheck((prev) => (prev += 1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!carts && <Intro buttonClick={getUsers} />}\r\n      {carts && (\r\n        <>\r\n          <div className=\"wrapper\">\r\n            {carts.map((cart, index) => {\r\n              return (\r\n                <WishList\r\n                  cart={cart}\r\n                  key={index}\r\n                  checkOpenWishList={checkOpenWishList}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div>{check === carts.length && <ConfirmButton />}</div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport const FinalOrder = ({ cartId, data }) => {\r\n  const [subTotal, setSubTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let summa = 0;\r\n    data[cartId].map((item) => {\r\n      summa += item.finalPrice;\r\n      return item;\r\n    });\r\n    setSubTotal(summa);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"finalListFor\">\r\n        <div className=\"finalListHeader\">\r\n          {'Confirmed gifts for ' + data[cartId][0].userName}\r\n        </div>\r\n        <div>\r\n          {data[cartId].map((item, index) => {\r\n            return (\r\n              <div className=\"finalListItem\" key={index}>\r\n                <div>{item.productName}</div>\r\n                <div>{item.finalPrice}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"finalListItem\">\r\n        <div></div>\r\n        <div className=\"subTotal\">{Math.round(subTotal * 100) / 100}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context } from \"./Context\";\r\nimport { FinalOrder } from \"./FinalOrder\";\r\n\r\nexport const ConfirmList = () => {\r\n  const [data, setData] = useState();\r\n  const [cartsId, setCartsId] = useState();\r\n  const [allCarts, setAllCarts] = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    const carts = [];\r\n    allCarts.map((item) => {\r\n      if (!carts.includes(item.cartId)) {\r\n        carts.push(item.cartId);\r\n      }\r\n      return item;\r\n    });\r\n    setCartsId(carts);\r\n    const cartData = {};\r\n    carts.map((cart) => {\r\n      const productsData = [];\r\n      allCarts.map((item) => {\r\n        if (item.cartId === cart && item.select) {\r\n          const productsDataItem = {\r\n            userName: item.userName,\r\n            finalPrice: item.reducedPrice,\r\n            productName: item.productName,\r\n          };\r\n          productsData.push(productsDataItem);\r\n        }\r\n        return item;\r\n      });\r\n      cartData[cart] = productsData;\r\n      return cart;\r\n    });\r\n    setData(cartData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"confirmListWrap\">\r\n      <div className=\"confirmListContent\">\r\n        <h2>Congratulations, your order is done!</h2>\r\n\r\n        {data && (\r\n          <>\r\n            {cartsId.map((item, index) => {\r\n              if (data[item].length) {\r\n                return <FinalOrder cartId={item} data={data} key={index} />;\r\n              }\r\n            })}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Header } from './components/Header';\r\nimport { useRoutes } from './routes';\r\nimport { Context } from './components/Context';\r\n\r\nconst App = () => {\r\n  const [allCarts, setAllCarts] = useState([]);\r\n  const routes = useRoutes();\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Context.Provider value={[allCarts, setAllCarts]}>\r\n          <Header />\r\n          <div>{routes}</div>\r\n        </Context.Provider>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Container } from './components/Container';\r\nimport { ConfirmList } from './components/ConfirmList';\r\n\r\nexport const useRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <Container />\r\n      </Route>\r\n      <Route path=\"/confirm\" exact>\r\n        <ConfirmList />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}